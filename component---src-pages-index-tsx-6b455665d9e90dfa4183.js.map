{"version":3,"file":"component---src-pages-index-tsx-6b455665d9e90dfa4183.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ntype CategoryItemProps = {\n  active: boolean;\n}\n\ntype GatsbyLinkProps = {\n  children: ReactNode;\n  className?: string;\n  to: string;\n} & CategoryItemProps\n\nexport type CategoryListProps = {\n  selectedCategory: string\n  categoryList: {\n    [key: string]: number\n  }\n}\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 1268px;\n  margin: 100px auto 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? '800' : '400')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n    selectedCategory,\n    categoryList,\n  }) {\n    return (\n      <CategoryListWrapper>\n        {Object.entries(categoryList).map(([name, count]) => (\n          <CategoryItem\n            to={`/?category=${name}`}\n            active={name === selectedCategory}\n            key={name}\n          >\n            #{name}({count})\n          </CategoryItem>\n        ))}\n      </CategoryListWrapper>\n    )\n}\n\nexport default CategoryList","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n//import { GatsbyImage, IsbyImageData } from 'gatsby-plugin-image' //lazyloading\n\n// 자신이 원하는 프로필 이미지 링크로 설정해주세요.\n// const PROFILE_IMAGE_LINK =\n//   '<https://avatars.githubusercontent.com/u/24629040?s=460&u=0bb3411f25c0e1c5d25d753fc648739367cb7032&v=4>'\nconst PROFILE_IMAGE_LINK = 'https://github.com/logic-phantom/TechLog/blob/main/blog-front/contents/20240809.jpg?raw=true';\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData\n}\n//lazyloading\n//const ProfileImageWrapper = styled.img`\nconst ProfileImageWrapper = styled(GatsbyImage)` \n  width: 150px;\n  height: 150px;\n  margin-bottom: 30px;\n  border-radius: 15px;\n  object-fit: cover;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100px;\n    height: 100px;\n    border-radius: 12px;\n  }\n`\n //lazy\n  const ProfileImage: FunctionComponent<ProfileImageProps> = function ({ \n    profileImage,\n  }) {\n    return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\n  }\n  \n  // const ProfileImage: FunctionComponent = function () {\n  //   return <ProfileImageWrapper src={PROFILE_IMAGE_LINK} alt=\"Profile Image\" />\n  // }\n\n  export default ProfileImage","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport ProfileImage from 'components/Main/ProfileImage'\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData\n}\n\nconst Introduction: FunctionComponent<IntroductionProps> = ({ profileImage }) => {\n  return (\n    <Background>\n      <Wrapper>\n        <Left>\n          <StyledProfileImage profileImage={profileImage} />\n        </Left>\n        <Right>\n          <SubTitle>안녕하세요,</SubTitle>\n          <Title>Forest_LIM🌿</Title>\n          <Description>\n            끊임없이 배우고, 성장하며<br />\n            사용자에게 더 나은 경험을 선물하는 개발자입니다.\n          </Description>\n          <PWASection>\n            <PWATitle>📱블로그 앱처럼 사용하기</PWATitle>\n            <PWADescription>\n              이 블로그는 PWA를 지원합니다. 모바일에서 홈 화면에 추가하여<br />\n              네이티브 앱처럼 사용할 수 있습니다.\n            </PWADescription>\n            <PWAInstructions>\n              <InstructionItem>1. 모바일 브라우저에서 블로그 접속</InstructionItem>\n              <InstructionItem>2. 브라우저 메뉴에서 \"홈 화면에 추가\" 선택</InstructionItem>\n              <InstructionItem>3. 앱 아이콘을 통해 언제든지 블로그 접속 가능</InstructionItem>\n            </PWAInstructions>\n          </PWASection>\n        </Right>\n      </Wrapper>\n    </Background>\n  )\n}\n\nexport default Introduction\n\n// 🎨 Styled Components\n\nconst Background = styled.div`\n  width: 100%;\n  background: linear-gradient(60deg,rgb(66, 105, 78) 0%,rgb(73, 110, 93) 100%);\n  color: #ffffff;\n  padding: 60px 20px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 960px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n  }\n`\n\nconst Left = styled.div`\n  flex-shrink: 0;\n  margin-right: 40px;\n\n  @media (max-width: 768px) {\n    margin-right: 0;\n    margin-bottom: 20px;\n  }\n`\n\nconst StyledProfileImage = styled(ProfileImage)`\n  border-radius: 50%;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n  width: 160px;\n  height: 160px;\n  overflow: hidden;\n`\n\nconst Right = styled.div`\n  flex: 1;\n`\n\nconst SubTitle = styled.div`\n  font-size: 18px;\n  color: #ccc;\n  margin-bottom: 8px;\n\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`\n\nconst Title = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 16px;\n\n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`\n\nconst Description = styled.div`\n  font-size: 16px;\n  line-height: 1.6;\n  color: #eee;\n  margin-bottom: 24px;\n\n  strong {\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`\n\nconst PWASection = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 20px;\n  margin-top: 20px;\n`\n\nconst PWATitle = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 12px;\n  color: #ffffff;\n`\n\nconst PWADescription = styled.div`\n  font-size: 14px;\n  line-height: 1.6;\n  color: #eee;\n  margin-bottom: 16px;\n`\n\nconst PWAInstructions = styled.div`\n  font-size: 14px;\n  color: #eee;\n`\n\nconst InstructionItem = styled.div`\n  margin-bottom: 8px;\n  padding-left: 16px;\n  position: relative;\n\n  &:before {\n    content: \"•\";\n    position: absolute;\n    left: 0;\n    color: #ffffff;\n  }\n`\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { PostFrontmatterType } from 'types/PostItem.types'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n//import { PostFrontmatterType } from 'types/PostItem.types'\n\ntype PostItemProps = PostFrontmatterType & { link: string }\n\n// type PostItemProps = {\n//   title: string\n//   date: string\n//   categories: string[]\n//   summary: string\n//   thumbnail: {\n//     publicURL: string\n//   }\n//   link: string\n// }\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`\n\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: black;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(item => (\n            <CategoryItem key={item}>{item}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  )\n}\n\n\nexport default PostItem\n\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react'\nimport { PostListItemType } from 'types/PostItem.types'\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  postList: PostListItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  }\n}\n\nexport default useInfiniteScroll","//import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport PostItem from 'components/Main/PostItem'\nimport { PostListItemType } from 'types/PostItem.types'\n//import React, { FunctionComponent, useMemo } from 'react'\nimport React, { FunctionComponent } from 'react'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\n\n\nconst POST_ITEM_DATA = {\n  title: 'React 시작하기',\n  date: '2024.08.12.',\n  categories: ['Web', 'Frontend', 'Testing'],\n  summary:\n    'React를 사용하여 블로그 만들기 시작',\n  thumbnail:\n    'https://github.com/logic-phantom/TechLog/blob/main/blog-front/contents/react.png?raw=true',\n  link: 'https://www.google.co.kr',\n}\n\ntype PostListProps = {\n  selectedCategory: string\n  posts: PostListItemType[]\n}\n\nexport type PostType = {\n  node: {\n    id: string\n    frontmatter: {\n      title: string\n      summary: string\n      date: string\n      categories: string[]\n      thumbnail: {\n        publicURL: string\n      }\n    }\n  }\n}\n\n\n// const PostListWrapper = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr 1fr;\n//   grid-gap: 20px;\n//   width: 768px;\n//   margin: 0 auto;\n//   padding: 50px 0 100px;\n\n//   @media (max-width: 768px) {\n//     grid-template-columns: 1fr;\n//     width: 100%;\n//     padding: 50px 20px;\n//   }\n// `\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n  width: 1268px;\n  margin: 0 auto;\n  padding: 50px 0 100px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    padding: 50px 20px;\n  }\n`\n\n//실질적인 아이템 목록 \n// const PostList: FunctionComponent = function () {\n//   return (\n//     <PostListWrapper>\n//       <PostItem {...POST_ITEM_DATA} />\n//     </PostListWrapper>\n//   )\n// }\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  selectedCategory,\n  posts,\n}) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  )\n}\n\n\nexport default PostList","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","import decodeComponent from 'decode-uri-component';\nimport {includeKeys} from 'filter-obj';\nimport splitOnFirst from 'split-on-first';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replaceAll(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSeparator = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSeparator, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options, type) {\n\tif (type === 'string' && typeof value === 'string') {\n\t\treturn value;\n\t}\n\n\tif (typeof type === 'function' && typeof value === 'string') {\n\t\treturn type(value);\n\t}\n\n\tif (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\treturn value.toLowerCase() === 'true';\n\t}\n\n\tif (type === 'number' && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\treturn Number(value);\n\t}\n\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\treturn Number(value);\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\ttypes: Object.create(null),\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replaceAll('+', ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null && options.types[key] !== 'string') {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tconst type = options.types[key] ? options.types[key].replace('[]', '') : undefined;\n\t\t\t\tvalue[key2] = parseValue(value2, options, type);\n\t\t\t}\n\t\t} else if (typeof value === 'object' && value !== null && options.types[key] === 'string') {\n\t\t\treturnValue[key] = Object.values(value).join(options.arrayFormatSeparator);\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options, options.types[key]);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tqueryString &&= `?${queryString}`;\n\n\tlet hash = getHash(object.url);\n\tif (typeof object.fragmentIdentifier === 'string') {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","//import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport GlobalStyle from 'components/Common/GlobalStyle'\nimport Footer from 'components/Common/Footer'\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList'\nimport Introduction from 'components/Main/Introduction'\nimport PostList, { PostType } from 'components/Main/PostList'\nimport { graphql } from 'gatsby'\nimport { PostListItemType } from 'types/PostItem.types'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport queryString, { ParsedQuery } from 'query-string'\nimport React, { FunctionComponent, useMemo } from 'react'\nimport Template from 'components/Common/Template'\n//import { PostListItemType } from 'types/PostItem.types'\n\nconst CATEGORY_LIST = {\n  All: 5,\n  Web: 3,\n  Mobile: 2,\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\n// CATEGORY_LIST 상수 제거\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list['All']++;\n\n          return list;\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      />\n      <PostList selectedCategory={selectedCategory} posts={edges} />\n    </Template>\n  )\n}\n\n\n\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: [{frontmatter: {date: DESC}}, {frontmatter: {title: ASC}}]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["CategoryListWrapper","_styled","target","name","styles","CategoryItem","_ref","active","props","___EmotionJSX","Link","_ref2","_ref3","selectedCategory","categoryList","Object","entries","map","_ref4","count","to","key","ProfileImageWrapper","GatsbyImage","profileImage","image","alt","Background","Wrapper","Left","StyledProfileImage","Right","SubTitle","Title","Description","PWASection","PWATitle","PWADescription","PWAInstructions","InstructionItem","ProfileImage","PostItemWrapper","ThumbnailImage","PostItemContent","Date","Category","Summary","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","item","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","length","children","observe","postList","slice","PostListWrapper","useInfiniteScroll","ref","id","fields","slug","PostItem","_extends","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","splitOnFirst","string","separator","separatorIndex","indexOf","isNullOrUndefined","strictUriEncode","encodeURIComponent","replaceAll","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","type","parseBooleans","toLowerCase","isNaN","trim","parseNumbers","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","types","create","formatter","accumulator","undefined","isEncodedArray","newValue","test","arrayValue","flat","parserForArrayFormat","returnValue","parameter","parameter_","key2","value2","values","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSeparator","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","category","list","forEach","All","Template","Introduction","CategoryList","PostList"],"sourceRoot":""}